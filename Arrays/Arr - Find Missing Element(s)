#include <iostream>
#include <stdio.h>
#include <stdlib.h>

using namespace std;

class Array {
private:
	int *A;
	int lenght;
	int size;
public:
	Array() {
		size = 10;
		lenght = 10;                   //Initialize dynamic array with predetermined values
		A = new int[size];                 //A = new int[size]{1,2,3,4,5,6,8,9,10,11};
		 
		//A[0]={1};  A[1]={2};  A[2]={3};  A[3]={4};  A[4]={5}; 
		//A[5]={6};  A[6]={7};  A[7]={9};  A[8]={10};  A[9]={11};
		//If elements start from one
		
		//A[0]={6};  A[1]={7};  A[2]={8};  A[3]={9};  A[4]={11};
	    //A[5]={12};  A[6]={13};  A[7]={14};  A[8]={15};  A[9]={16};
		//If elements dont start from one
		 
		 
	    //A[0]={6};  A[1]={7};  A[2]={8};  A[3]={9};  A[4]={11};
		//A[5]={12};  A[6]={15};  A[7]={16};  A[8]={17};  A[9]={18};
		//If multiple elements are missing
	}
	

	int Smiss1() {                      //If elements are natural numbers
		int sum = 0;
		for (int i=0; i<10; i++) {
			sum = sum + A[i];
		}
		int s = 11*(11 + 1)/2;

		return s - sum;
	}
	
	int Smiss2(){                      // If elemets dont start from one
		int low = A[0];
		int diff = A[0]-0;
		for(int i=0; i<10; i++){
			if(A[i]-i != diff){
				cout<<"The missing element is: "<<i+diff<<" ";
				break;
			}
		} 
		
	}
	
	void Mmiss1(){
		int low = A[0];
		int diff = A[0] - 0;
		for(int i=0; i<10; i++){
			if(A[i]-i != diff){
				while(diff< A[i]-i){
					cout<<i+diff<<" "<<endl;
					diff++;
				}
			}
		}
		
	}

};

int main() {
	Array arr1;
	
	cout<<"The missing element is: "<<arr1.Smiss1()<<endl;
		
	arr1.Smiss2();
	
	cout<<"The missing elements are: ";
	arr1.Mmiss1();
	
	
	//2nd Method for finding missing multiple elements
	int B[10] = {3,7,4,9,12,6,1,11,2,10};
	
	int low = 3;
	int high = 12;
	int n = 10;
	
	int C[high] = {0};
	
	for(int i=0; i<n; i++){
		C[B[i]]++;
	}
	
	cout<<"The missing elements are: ";
	
	for(int i=low; i<=high; i++){
		if(C[i]==0){
			cout<<i<<" ";
		}
	}
	
	
	return 0;
}
