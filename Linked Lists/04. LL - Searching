#include <iostream>
#include <stdio.h>
#include <stdlib.h>

using namespace std;

class Node {
public:
	int data;
	Node* next;
};

void Display(Node* p) {

	while (p != nullptr) {
		cout << p->data << " -> " << flush;
		p = p->next;
	}
}


Node* Search(Node* p, int key) {
	while (p != nullptr) {
		if (key == p->data) {
			return p;
		}
		p = p->next;
	}
	return NULL;
}

Node* RSearch(Node* p, int key) {
	if (p == NULL) {
		return NULL;
	}
	if (key == p->data) {
		return p;
	}
	return RSearch(p->next, key);
}

int main() {
	int A[] = { 1,2,3,4,5 };

	Node* head;
	head = new Node;

	Node* temp;
	Node* last;

	head->data = A[0];
	head->next = nullptr;
	last = head;

	for (int i = 1; i < sizeof(A) / sizeof(A[0]); i++) {
		temp = new Node;

		temp->data = A[i];
		temp->next = nullptr;

		last->next = temp;
		last = temp;
	}

	Display(head);
	cout << endl<< endl;

	cout << Search(head, 3);
	cout << endl << endl;

	cout << RSearch(head, 3);
	cout << endl << endl;

	return 0;
}
