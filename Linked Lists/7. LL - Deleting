#include <iostream>
#include <stdio.h>
#include <stdlib.h>

using namespace std;

class Node {
public:
	int data;
	Node* next;
}; 
	Node* head ;
	

void create(int A[], int n) {
	Node* temp;
	Node* last;
	head = new Node;

	head->data = A[0];
	head->next = NULL;
	last = new Node;
	last = head;

	for (int i = 1; i < n; i++) {
		temp = new Node;

		temp->data = A[i];
		temp->next = NULL;

		last->next = temp;
		last = temp;
		
		cout << endl;
	}
}
void Display(Node* p) {

	while (p != NULL) {
		cout << p->data << " -> " << flush;
		p = p->next;
	}
}

int Counter(Node* p) {
	int counter = 0;
	while (p != NULL) {
		counter++;
		p = p->next;
	}
	return counter;
}

int Delete(Node* p, int index) {
	Node *tail = NULL;
	int x = - 1;

	if (index<1 || index > Counter(p)) {
		return -1;
	}
	
	if (index == 1) {
		tail = head;
		x = head->data;
		head = head->next;
		delete tail;
		return x;
	}
	else {
		for (int i = 0; i <index-1; i++) {
			tail = p;
			p = p->next;
		}
		tail->next = p->next;
		x = p->data;
		delete p;
		return x;
	}

}


int main() {
	int A[] = { 3,5,8,11,15 };

	create(A,5);

	Display(head);
	cout << endl<< endl;
	
	Delete(head, 1);

	Display(head);
	cout << endl << endl;

	return 0;
