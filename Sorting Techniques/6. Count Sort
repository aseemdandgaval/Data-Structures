/*
    0. Time Complexity: O(N+K)       K is number of elements in Array which is
        Min: O(N+K)               max number in unsorted given array
        Max: O(N+K)

    1. No. Of Comaprisons: - 
    2. No. Of Swaps: -
    3. Adaptive: No?
    4. Stable: Yes
    5. Extra Memory: No

*/

#include <iostream>

using namespace std;

int FindMax(int A[], int n) {
    int max = INT32_MIN;
    for (int i = 0; i < n; i++) {
        if (A[i] > max)
            max = A[i];
    }
    return max;
}

void CountSort(int A[], int n) {
    int i, j, max;
    int* C;

    max = FindMax(A, n);
    C = new int[max + 1];

    for (i = 0;  i < max+1 ; i++) {
        C[i] = 0;
    }
    for (i = 0; i < n; i++) {
        C[A[i]]++;
    }
    
    i = 0; j = 0;
    
    while (j < max+1) {
        if (C[j] > 0) {
            A[i++] = j;
            C[j]--;
        }
        else {
            j++;
        }
    }
}

int main()
{
    int A[] = { 7,6,10,5,1,2,8,7,5,5 };
    int n = sizeof(A) / sizeof(A[0]);
    CountSort(A, n);

    for (int k = 0; k < n; k++) {
        cout << A[k] << " ";
    }
    
