#include <iostream>
#include <stdio.h>
#include <stdlib.h>

using namespace std;

class Stack {
public:
	int size;
	int top;
	int* s;
};

void create(Stack* st) {
	cout << "Enter the size of the stack: ";
	cin >> st->size;
	st->top = -1;
	st->s = new int[st->size];
}

void Display(Stack* st) {
	for (int i = st->top; i >= 0; i--) {
		cout << st->s[i]<<" ";
	}
}
void Push(Stack* st, int x) {
	if (st->top == st->size - 1) {
		cout << "Stack overflow." << endl;
	}
	else {
		st->top++;
		st->s[st->top] = x;
	}
}

int Pop(Stack* st) {
	int x = -1;

	if (st->top == -1) {
		cout << "Stack underflow." << endl;
	}
	else {
		x = st->s[st->top];
		st->top--;

	}
	return x;
}

int Peek(Stack* st, int pos) {
	int x = -1;
	if (st->top - pos +1< 0) {
		cout << "Invalid position." << endl;
	}
	else {
		x = st->s[st->top - pos + 1];
	}
	return x;
}

int StackTop(Stack* st) {
	if (st->top == -1) {
		return -1;
	}
	else {
		return st->s[st->top];
	}
}

void isEmpty(Stack* st) {
	if (st->top == -1) {
		cout << "The stack is empty." << endl;
	}
	else {
		cout << "The stack is not empty." << endl;
	}
}

void isFull(Stack* st) {
	if (st->top == st->size - 1) {
		cout << "The stack is full." << endl;
	}
	else {
		cout << "The stack is not full." << endl;
	}
}


int main() {
	Stack st;

	create(&st);

	Push(&st, 10);
	Push(&st, 20);
	Push(&st, 30);
	Push(&st, 40);

	Display(&st);
	cout << endl << endl;

	//Pop(&st);

	Display(&st);
	cout << endl << endl;

	cout << Peek(&st, 2) << endl;

	cout << StackTop(&st) << endl;

	isEmpty(&st);
	isFull(&st);
}
