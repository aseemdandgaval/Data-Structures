#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <cstring>
#include <string.h>

using namespace std;

class Node {
public:
	int data;
	Node* next;
};
Node* Top = NULL;

void Display(Node* p) {

	while (p != NULL) {
		cout << p->data << " ";
		p = p->next;
	}
}
void Push(char x) {
	Node* temp = new Node;

	if (temp == NULL) {
		cout << "Stack overflow." << endl;
	}
	else {
		temp->data = x;
		temp->next = Top;
		Top = temp;
	}
}

char Pop() {
	int x = -1;
	Node* temp;

	if (Top == NULL) {
		cout << "Stack underflow." << endl;
	}
	else {
		temp = Top;
		Top = Top->next;
		x = temp->data;
		delete temp;
	}
	return x;
}

int Pre(char x) {
	if (x == '+' || x == '-') {
		return 1;
	}
	else if (x == '*' || x == '/') {
		return 2;
	}
	return 0;
}

int isOperand(char x) {
	if (x == '+' || x == '-' || x == '*' || x == '/') {
		return 0;
	}
	else {
		return 1;
	}
}

char* InToPostfix(char* infix) {
	int i = 0;
	int j = 0;
	char* postfix; 
	int len = strlen(infix);
	postfix = new char[len + 2];

	while (infix[i] != '\0') {
		if (isOperand(infix[i]) == 1) {
			postfix[j] = infix[i];
			i++;
			j++;
		}
		else {
			if (Top==NULL || Pre(infix[i]) > Pre(Top->data)) {
				Push(infix[i]);
				i++;
			}
			else {
				postfix[j] = Pop();
				j++;
			}
		}
	}

	while (Top != NULL) {
		postfix[j] = Pop();
		j++;
	}
	postfix[j] = '\0';
	return postfix;
}

int main() {
	char* infix = "a+b*c";
	Push('#');

	char* postfix = InToPostfix(infix);

	cout << postfix;
} 
